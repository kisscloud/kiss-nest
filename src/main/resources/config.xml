<?xml version='1.1' encoding='UTF-8'?>
<project>
    <actions/>
    <description></description>
    <keepDependencies>false</keepDependencies>
    <properties>
        <com.tikal.hudson.plugins.notification.HudsonNotificationProperty plugin="notification@1.13">
            <endpoints>
                <com.tikal.hudson.plugins.notification.Endpoint>
                    <protocol>HTTP</protocol>
                    <format>JSON</format>
                    <urlInfo>
                        <urlOrId>%s</urlOrId>
                        <urlType>PUBLIC</urlType>
                    </urlInfo>
                    <event>100</event>
                    <timeout>30000</timeout>
                    <loglines>0</loglines>
                    <buildNotes></buildNotes>
                    <retries>5</retries>
                </com.tikal.hudson.plugins.notification.Endpoint>
            </endpoints>
        </com.tikal.hudson.plugins.notification.HudsonNotificationProperty>
        <hudson.model.ParametersDefinitionProperty>
            <parameterDefinitions>
                <hudson.model.StringParameterDefinition>
                    <name>branch</name>
                    <description>请填写分支构建</description>
                    <defaultValue></defaultValue>
                    <trim>false</trim>
                </hudson.model.StringParameterDefinition>
            </parameterDefinitions>
        </hudson.model.ParametersDefinitionProperty>
    </properties>
    <scm class="hudson.plugins.git.GitSCM" plugin="git@3.9.1">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
            <hudson.plugins.git.UserRemoteConfig>
                <url>%s</url>
            </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
            <hudson.plugins.git.BranchSpec>
                <name>*/master</name>
            </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="list"/>
        <extensions>
            <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
                <relativeTargetDir>%s</relativeTargetDir>
            </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
        </extensions>
    </scm>
    <canRoam>true</canRoam>
    <disabled>false</disabled>
    <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
    <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
    <triggers/>
    <concurrentBuild>false</concurrentBuild>
    <builders>
        <hudson.tasks.Shell>
            <command>
&#x000A;
#!/bin/bash&#x000A;
cd %s&#x000A;
(git branch -a | grep ${branch}) || (git tag -l | grep ${branch})&#x000A;
if [ $? -eq 0 ]; then&#x000A;
  git checkout  $branch &amp;&amp; echo &quot;#Sucess: source codes had checkout to ${branch} branch&quot; || { echo &quot;#Error: source codes failed to checkout to ${branch} branch&quot;; exit ; }&#x000A;
else&#x000A;
  echo &quot;#Error: source codes ${branch} branch does not exist！&quot;; exit ;&#x000A;
fi&#x000A;
git pull origin ${branch}&#x000A;
log=`git log|grep 'commit'|head -1`&#x000A;
version=`echo ${log##*commit}`&#x000A;
slug=%s&#x000A;
path=%s&#x000A;
binIp=%s&#x000A;
name=$slug-${branch}-$version&#x000A;
echo "versionStart="$version"=versionEnd"&#x000A;
&#x000A;
%s&#x000A;
&#x000A;
default=`ls __PACKAGE__*`&#x000A;
ts=`date '+%%Y-%%m-%%d-%%H-%%M-%%S'`&#x000A;
newName=$name-$ts`echo ${default##__PACKAGE__}`&#x000A;
mv __PACKAGE__* $newName&#x000A;
tar -zcvf $newName.tar.gz $newName*&#x000A;
ansible $binIp -u root -m shell -a "if [ ! -d "/packages/$path" ];then mkdir -p /packages/$path;fi"&#x000A;
rsync -v $newName.tar.gz root@$binIp:/packages/$path/&#x000A;
echo "tarNameStart="$newName.tar.gz"=tarNameEnd"&#x000A;
            </command>
        </hudson.tasks.Shell>
    </builders>
    <publishers/>
    <buildWrappers>
        <org.jenkinsci.plugins.golang.GolangBuildWrapper plugin="golang@1.2">
        </org.jenkinsci.plugins.golang.GolangBuildWrapper>
    </buildWrappers>
</project>