<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 定义一个映射配置文件的根节点 -->
<!-- namespace 属性用来定义配置命名空间， 主要进行 session 级别的缓存管理 -->
<!-- namespace 默认使用当前操作实体类的全路径 -->
<mapper namespace="com.kiss.kissnest.mapper.DeployLogMapper">
    <insert id="createDeployLog" parameterType="com.kiss.kissnest.entity.DeployLog" keyProperty="id" useGeneratedKeys="true">
        insert into deploylogs (teamId,jobId,envId,branch,tag,version,projectId,remark,totalTasks,status,statusText,output,operatorId,operatorName)
        value
        (#{teamId},#{jobId},#{envId},#{branch},#{tag},#{version},#{projectId},#{remark},#{totalTasks},#{status},#{statusText},#{output},#{operatorId},#{operatorName})
    </insert>

    <update id="incrementDeployLogSuccessTasks" parameterType="java.lang.Integer">
        update deploylogs
        set
        successTasks = successTasks + 1
        where id = #{id}
    </update>

    <select id="getDeployLogById" parameterType="java.lang.Integer" resultType="com.kiss.kissnest.entity.DeployLog">
        select * from deploylogs where id = #{id};
    </select>

    <select id="getDeployLogs" resultType="com.kiss.kissnest.entity.DeployLog">
        select * from deploylogs;
    </select>
    
    <select id="getDeployLogOutputById" parameterType="java.lang.Integer" resultType="com.kiss.kissnest.output.DeployLogOutput">
        select de.id,de.teamId,de.jobId,de.envId,jo.serverIds,de.branch,de.tag,de.version,de.projectId,pr.name as projectName,de.status,de.statusText,de.output,de.operatorId,de.operatorName,de.remark,
        UNIX_TIMESTAMP(de.createdAt) * 1000 as createdAt,UNIX_TIMESTAMP(de.updatedAt) * 1000 as updatedAt,env.name as envName,pr.groupId,gr.name as groupName,pp.pathWithNamespace as commitPath from deploylogs de
        left join jobs jo
        on de.jobId = jo.id
        left join projects pr
        on de.projectId = pr.id
        left join groups gr
        on pr.groupId = gr.id
        left join environments env
        on de.envId = env.id
        left join projectrepository pp
        on de.projectId = pp.projectId and de.teamId = pp.teamId
        where de.id = #{id}
        order by de.createdAt desc
    </select>
    
    <select id="getDeployLogsOutputByTeamId" parameterType="java.lang.Integer" resultType="com.kiss.kissnest.output.DeployLogOutput">
        select de.id,de.teamId,de.jobId,de.envId,jo.serverIds,de.branch,de.tag,de.version,de.projectId,pr.name as projectName,de.status,de.operatorId,de.operatorName,de.remark,
        UNIX_TIMESTAMP(de.createdAt) * 1000 as createdAt,UNIX_TIMESTAMP(de.updatedAt) * 1000 as updatedAt,env.name as envName,pr.groupId,gr.name as groupName,de.statusText,pp.pathWithNamespace as commitPath from deploylogs de
        left join jobs jo
        on de.jobId = jo.id
        left join projects pr
        on de.projectId = pr.id
        left join groups gr
        on pr.groupId = gr.id
        left join environments env
        on de.envId = env.id
        left join projectrepository pp
        on de.projectId = pp.projectId and de.teamId = pp.teamId
        where de.teamId = #{teamId}
        order by de.createdAt desc
        <if test="start != null">
            limit #{start},#{size}
        </if>
    </select>
    
    <select id="getDeployLogsCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(*) from deploylogs where teamId = #{teamId};
    </select>

    <select id="getDeployLogOutputTextById" parameterType="java.lang.Integer" resultType="java.lang.String">
        select output from deploylogs where id = #{id};
    </select>
</mapper>