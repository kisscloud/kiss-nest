<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 定义一个映射配置文件的根节点 -->
<!-- namespace 属性用来定义配置命名空间， 主要进行 session 级别的缓存管理 -->
<!-- namespace 默认使用当前操作实体类的全路径 -->
<mapper namespace="com.kiss.kissnest.mapper.BuildLogMapper">
    <insert id="createBuildLog" parameterType="com.kiss.kissnest.entity.BuildLog" useGeneratedKeys="true" keyProperty="id">
        insert into buildlogs (teamId,jobName,branch,number,queueId,version,projectId,remark,status,output,duration,jarName,operatorId,operatorName,buildAt)
        value
        (#{teamId},#{jobName},#{branch},#{number},#{queueId},#{version},#{projectId},#{remark},#{status},#{output},#{duration},#{jarName},#{operatorId},#{operatorName},#{buildAt})
    </insert>

    <delete id="deleteBuildLogById" parameterType="java.lang.Integer">
        delete from buildlogs where id = #{id}
    </delete>

    <update id="updateBuildLog" parameterType="com.kiss.kissnest.entity.BuildLog">
        update buildlogs
        set
        id = #{id}
        <if test="branch != null">
            ,branch = #{branch}
        </if>
        <if test="number != null">
            ,number = #{number}
        </if>
        <if test="queueId != null">
            ,queueId = #{queueId}
        </if>
        <if test="version != null">
            ,version = #{version}
        </if>
        <if test="projectId != null">
            ,projectId = #{projectId}
        </if>
        <if test="remark != null">
            ,remark = #{remark}
        </if>
        <if test="status != null">
            ,status = #{status}
        </if>
        <if test="output != null">
            ,output = #{output}
        </if>
        <if test="duration != null">
            ,duration = #{duration}
        </if>
        <if test="jarName != null">
            ,jarName = #{jarName}
        </if>
        <if test="operatorId != null">
            ,operatorId = #{operatorId}
        </if>
        <if test="operatorName != null">
            ,operatorName = #{operatorName}
        </if>
        <if test="buildAt != null">
            ,buildAt = #{buildAt}
        </if>
        where id = #{id}
    </update>

    <select id="getBuildLogById" parameterType="java.lang.Integer" resultType="com.kiss.kissnest.entity.BuildLog">
        select * from buildlogs where id = #{id};
    </select>

    <select id="getBuildLogs" resultType="com.kiss.kissnest.entity.BuildLog">
        select * from buildlogs;
    </select>

    <select id="getLastBuildByJobNameAndProjectId" parameterType="java.util.Map"
            resultType="com.kiss.kissnest.entity.BuildLog">
        select * from buildlogs where jobName=#{jobName} and projectId=#{projectId} order by number desc limit 0,1;
    </select>

    <select id="getBuildLogsByTeamId" parameterType="java.lang.Integer" resultType="com.kiss.kissnest.output.BuildLogOutput">
        select bu.*,pr.pathWithNamespace as commitPath,po.name as projectName from buildlogs bu
        left join projectrepository pr
        on bu.projectId = pr.projectId and bu.teamId = pr.teamId
        left join projects po
        on bu.projectId = po.id and bu.teamId = po.teamId
        where bu.teamId = #{teamId} order by bu.buildAt desc
        <if test="start != null">
            limit #{start},#{size}
        </if>
    </select>

    <select id="getBuildRecentLog" parameterType="java.lang.Integer" resultType="com.kiss.kissnest.output.BuildLogOutput">
        select bu.*,pr.pathWithNamespace as commitPath from buildlogs bu
        left join projectrepository pr
        on bu.projectId = pr.projectId and bu.teamId = pr.teamId
        where bu.id = #{id};
    </select>

    <delete id="deleteBuildLogsByProjectId" parameterType="java.lang.Integer">
        delete from buildlogs where projectId = #{projectId}
    </delete>

    <select id="getBuildLogCountByTeamId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(*) from buildlogs where teamId = #{teamId};
    </select>
</mapper>