<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 定义一个映射配置文件的根节点 -->
<!-- namespace 属性用来定义配置命名空间， 主要进行 session 级别的缓存管理 -->
<!-- namespace 默认使用当前操作实体类的全路径 -->
<mapper namespace="com.kiss.kissnest.mapper.ProjectMapper">

    <insert id="createProject" parameterType="com.kiss.kissnest.entity.Project">
        insert into projects (name,teamId,groupId,slug,membersCount,operatorId,operatorName,type)
        value
        (#{name},#{teamId},#{groupId},#{slug},#{membersCount},#{operatorId},#{operatorName},#{type})
    </insert>
    
    <delete id="deleteProjectById" parameterType="java.lang.Integer">
        delete from projects where id = #{id}
    </delete>
    
    <update id="updateProject" parameterType="com.kiss.kissnest.entity.Project">
        update projects
        set
        id = #{id}
        <if test="name != null">
            ,name = #{name}
        </if>
        <if test="teamId != null">
            ,teamId = #{teamId}
        </if>
        <if test="slug != null">
            ,slug = #{slug}
        </if>
        <if test="teamId != null">
            ,groupId = #{groupId}
        </if>
        <if test="operatorId != null">
            ,operatorId = #{operatorId}
        </if>
        <if test="operatorName != null">
            ,operatorName = #{operatorName}
        </if>
        <if test="type != null">
            ,type #{type}
        </if>
        where id = #{id}
    </update>
    
    <update id="addCount" parameterType="java.util.Map">
        update projects
        set 
        <if test="type == 'members'">
            membersCount = membersCount + 1
        </if>
        <if test="type == 'needs'">
            needsCount = needsCount + 1
        </if>
        <if test="type == 'issues'">
            issuesCount = issuesCount + 1
        </if>
        where id = #{id}
    </update>

    <select id="getProjectById" parameterType="java.lang.Integer" resultType="com.kiss.kissnest.entity.Project">
        select * from projects where id = #{id};
    </select>

    <select id="getProjects" parameterType="java.lang.Integer" resultType="com.kiss.kissnest.entity.Project">
        select * from projects
        where
        teamId = #{teamId}
        <if test="groupId != null">
            and groupId = #{groupId}
        </if>
    </select>

    <select id="getProjectByNameAndTeamId" parameterType="java.util.Map" resultType="com.kiss.kissnest.entity.Project">
        select * from projects where name = #{name} and teamId = #{teamId} limit 0,1;
    </select>
    
    <select id="getProjectBySlugAndTeamId" parameterType="java.util.Map" resultType="com.kiss.kissnest.entity.Project">
        select * from projects where slug = #{slug} and teamId = #{teamId};
    </select>

    <select id="getProjectByRepositoryId" parameterType="java.lang.Integer" resultType="com.kiss.kissnest.entity.Project">
        select * from projects where repositoryId = #{repositoryId};
    </select>
    
    <update id="addRepositoryIdById" parameterType="com.kiss.kissnest.entity.Project">
        update projects
        set
        repositoryId = #{repositoryId}
        where id = #{id};
    </update>
    
    <select id="getProjectsWithoutBuildJob" parameterType="java.lang.Integer" resultType="com.kiss.kissnest.entity.Project">
        select * from projects 
        where id not in
        (select projectId from jobs where teamId = #{teamId} and type =1)
        and teamId = #{teamId}
    </select>

    <select id="getProjectsWithBuildJob" parameterType="java.lang.Integer" resultType="com.kiss.kissnest.entity.Project">
        select * from projects
        where id in
        (select projectId from jobs where teamId = #{teamId} and type =1)
        and teamId = #{teamId}
    </select>
</mapper>